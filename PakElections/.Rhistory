?html_nodes
html_nodes(gob, "//strong")
html_nodes(gob, "strong")
html_nodes(gob, "span[style = "font-size: 20px; font-weight: bold;"]")
html_nodes(gob, "span[style = font-size: 20px; font-weight: bold;]")
html_nodes(gob, "//h3/a/span")
html_nodes(gob, "/h3/a/span")
html_nodes(gob, "h3/a/span")
html_nodes(gob, xpath = "//h3/a/span")
value <- html_nodes(gob, "strong")
dim(value)
length(value)
product <- html_nodes(gob, xpath = "//h3/a/span")
length(product)
value
product <- html_nodes(gob, xpath = "//h3/a/span") %>% html_text()
product[1:10]
value <- html_nodes(gob, "strong") %>% html_text()
value[1:10]
?gsub
?gregexpr
gsub("\t", "", value)
gsub("\t", "", value)
gsub("\n", "", value)
value <- gsub("\t", "", value)
value <- gsub("\n", "", value)
value <- html_nodes(gob, "strong") %>% html_text() %>% gsub("\t", "", value) %>% value <- gsub("\n", "", value)
value <- html_nodes(gob, "strong") %>% html_text() %>% gsub("\t", "", value) %>% gsub("\n", "", value)
value
value <- html_nodes(gob, "strong") %>% html_text()
value <- gsub("\t", "", value)
value <- gsub("\n", "", value)
value
grep("Rs", value)
length(grep("Rs", value))
value <- value[grep("Rs", value)]
value
value <- gsub("Rs ", "", value)
value
value <- as.numeric(value)
value
value <- html_nodes(gob, "strong") %>% html_text()
value <- gsub("\t", "", value)
value <- gsub("\n", "", value)
value <- value[grep("Rs", value)]
value <- gsub("Rs ", "", value)
value <- gsub(",","", value)
value
value <- as.numeric(value)
value
product
?html_nodes()
lenth(value)
length(value)
?getURL
options()
options(HTTPUserAgent = )
options('HTTPUserAgent')
?options()
searchpaths()
search()
detach(7)
search()
rawdata <- getURL("https://www.olx.com.pk/motorcycles/?page=3",cainfo = cert, httpheader = c('User-Agent' = "Mozilla/5.0 (Linux; U; Android 2.1; en-us; Eclair_SPR Build/30201)"))
rawdata
rawdata <- getURL("https://www.olx.com.pk/motorcycles/?page=3",cainfo = cert))
rawdata <- getURL("https://www.olx.com.pk/motorcycles/?page=3",cainfo = cert)
options(HTTPUserAgent = "Mozilla/5.0 (Linux; U; Android 2.2.1; en-us; ADR6400L 4G Build/FRG83D)")
getOption("HTTPUserAgent")
rawdata <- getURL("https://www.olx.com.pk/motorcycles/?page=2",cainfo = cert)
?sys.sleep
?Sys.sleep()
print("A")
Sys.sleep(5)
print("B")
?paste0
i = 2
paste("https://www.olx.com.pk/motorcycles/?page=",i, sep = "")
for i in (1:40){print(i)}
for (i in 1:40){print(i)}
df = data.frame()
options(HTTPUserAgent = "Mozilla/5.0 (Linux; U; Android 2.2.1; en-us; ADR6400L 4G Build/FRG83D)")
cert <- system.file("CurlSSL", "cacert.pem", package = "RCurl")
df = data.frame()
address <- paste("https://www.olx.com.pk/motorcycles/?page=",2, sep = "")
rawdata <- getURL(address,cainfo = cert)
gob <- read_html(rawdata)
product <- html_nodes(gob, xpath = "//h3/a/span") %>% html_text()
value <- html_nodes(gob, "strong") %>% html_text()
value <- gsub("\t", "", value)
value <- gsub("\n", "", value)
value <- value[grep("Rs", value)]
value <- gsub("Rs ", "", value)
value <- gsub(",","", value)
value <- as.numeric(value)
combined <- cbind(product,value)
combined
class(value)
combined <- data.frame(product,value)
combimed
combined
df <- rbind(df,combined)
df
dim(df)
address <- paste("https://www.olx.com.pk/motorcycles/?page=",3, sep = "")
rawdata <- getURL(address,cainfo = cert)
gob <- read_html(rawdata)
product <- html_nodes(gob, xpath = "//h3/a/span") %>% html_text()
value <- html_nodes(gob, "strong") %>% html_text()
value <- gsub("\t", "", value)
value <- gsub("\n", "", value)
value <- value[grep("Rs", value)]
value <- gsub("Rs ", "", value)
value <- gsub(",","", value)
value <- as.numeric(value)
combined <- data.frame(product,value)
combined
combined
dim(combined)
combined
print("A")
options(HTTPUserAgent = "Mozilla/5.0 (Linux; U; Android 2.2.1; en-us; ADR6400L 4G Build/FRG83D)")
cert <- system.file("CurlSSL", "cacert.pem", package = "RCurl")
df = data.frame()
address <- paste("https://www.olx.com.pk/motorcycles/?page=",2, sep = "")
rawdata <- getURL(address,cainfo = cert)
library(RCurl)
library(rvest)
rawdata <- getURL(address,cainfo = cert)
gob <- read_html(rawdata)
product <- html_nodes(gob, xpath = "//h3/a/span") %>% html_text()
value <- html_nodes(gob, "strong") %>% html_text()
value <- gsub("\t", "", value)
value <- gsub("\n", "", value)
value <- value[grep("Rs", value)]
value <- gsub("Rs ", "", value)
value <- gsub(",","", value)
value <- as.numeric(value)
combined <- data.frame(product,value)
combined
df <- rbind(df,combined)
address <- paste("https://www.olx.com.pk/motorcycles/?page=",3, sep = "")
rawdata <- getURL(address,cainfo = cert)
gob <- read_html(rawdata)
product <- html_nodes(gob, xpath = "//h3/a/span") %>% html_text()
value <- html_nodes(gob, "strong") %>% html_text()
value <- gsub("\t", "", value)
value <- gsub("\n", "", value)
value <- value[grep("Rs", value)]
value <- gsub("Rs ", "", value)
value <- gsub(",","", value)
value <- as.numeric(value)
combined <- data.frame(product,value)
combined
df <- rbind(df,combined)
dim(df)
df[c(1:5,46:50),]
df = data.frame()
options(HTTPUserAgent = "Mozilla/5.0 (Linux; U; Android 2.2.1; en-us; ADR6400L 4G Build/FRG83D)")
cert <- system.file("CurlSSL", "cacert.pem", package = "RCurl")
df = data.frame()
for (i in 2:40){
address <- paste("https://www.olx.com.pk/motorcycles/?page=",i, sep = "")
rawdata <- getURL(address,cainfo = cert)
gob <- read_html(rawdata)
product <- html_nodes(gob, xpath = "//h3/a/span") %>% html_text()
value <- html_nodes(gob, "strong") %>% html_text()
value <- gsub("\t", "", value)
value <- gsub("\n", "", value)
value <- value[grep("Rs", value)]
value <- gsub("Rs ", "", value)
value <- gsub(",","", value)
value <- as.numeric(value)
combined <- data.frame(product,value)
df <- rbind(df,combined)
Sys.sleep(5)
}
dim(df)
head(df)
tail(df)
for (i in 41:60){
address <- paste("https://www.olx.com.pk/motorcycles/?page=",i, sep = "")
rawdata <- getURL(address,cainfo = cert)
gob <- read_html(rawdata)
product <- html_nodes(gob, xpath = "//h3/a/span") %>% html_text()
value <- html_nodes(gob, "strong") %>% html_text()
value <- gsub("\t", "", value)
value <- gsub("\n", "", value)
value <- value[grep("Rs", value)]
value <- gsub("Rs ", "", value)
value <- gsub(",","", value)
value <- as.numeric(value)
combined <- data.frame(product,value)
df <- rbind(df,combined)
Sys.sleep(5)
}
for (i in 61:90){
address <- paste("https://www.olx.com.pk/motorcycles/?page=",i, sep = "")
rawdata <- getURL(address,cainfo = cert)
gob <- read_html(rawdata)
product <- html_nodes(gob, xpath = "//h3/a/span") %>% html_text()
value <- html_nodes(gob, "strong") %>% html_text()
value <- gsub("\t", "", value)
value <- gsub("\n", "", value)
value <- value[grep("Rs", value)]
value <- gsub("Rs ", "", value)
value <- gsub(",","", value)
value <- as.numeric(value)
combined <- data.frame(product,value)
df <- rbind(df,combined)
Sys.sleep(5)
}
tail(df)
df2 = data.frame()
address <- paste("https://www.olx.com.pk/cars/?page=",2, sep = "")
rawdata <- getURL(address,cainfo = cert)
gob <- read_html(rawdata)
?write.table
?write.csv
write.table(df, "motorcycles.csv", row.names = F, sep = ",")
library(qdap)
?freq_terms
df$product <- gsub("[[:punct:]]","",df$product)
df$product <- gdub("\\s", " ", df$product)
df$product <- gsub("([[:alpha:]]{2,})(\\d{3,})","\\1 \\2", df$product)
df <- read.csv("motorcycles.csv", stringsAsFactors = F)
df2 <- read.csv("cars.csv", stringsAsFactors = F)
df <- cbind(df, category = rep("motorcycle", nrow(df)))
df <- unique(df)
df$product <- gsub("[[:punct:]]","",df$product)
df$product <- gsub("\\s", " ", df$product)
df$product <- gsub("([[:alpha:]]{2,})(\\d{3,})","\\1 \\2", df$product)
df2 <- cbind(df2, category = rep("car",nrow(df2)))
df2 <- unique(df2)
df2$product <- gsub("[[:punct:]]","",df2$product)
df2$product <- gsub("\\s", " ", df2$product)
df2$product <- gsub("([[:alpha:]]{2,})(\\d{3,})","\\1 \\2", df2$product)
text1 <- paste(df$product, sep = "",collapse = "")
freq_terms(text1)
plot(freq_terms(text1))
text2 <- paste(df2$product, sep = "", collapse = "")
plot(freq_terms(text2))
par(mfrow = c(1,2))
plot(freq_terms(text1))
plot(freq_terms(text2))
par(mfrow = c(1,2))
plot(freq_terms(text1))
plot(freq_terms(text2))
par(mfrow = c(2,1))
plot(freq_terms(text1))
plot(freq_terms(text2))
plot(freq_terms(text1))
library (tm)
plot(freq_terms(text1))
plot(freq_terms(text2))
plot(freq_terms(text1))
df$product <- gsub("bikehonda","bike honda", df$product)
df$product <- gsub("conditionhonda", "condition honda", df$product)
text1 <- paste(df$product, sep = "",collapse = "")
plot(freq_terms(text1))
grep("conditionhonda", df$product)
text1 <- paste(df$product, sep = "",collapse = " ")
plot(freq_terms(text1))
text2 <- paste(df2$product, sep = "", collapse = " ")
plot(freq_terms(text2))
data <- cbind(df$product, df2$product)
dim(df$product)
dim(df)
dim(df2)
data <- cbind(df$product, df2$product[1:3355])
class(data)
data <- data.frame(df$product, df2$product[1:3355])
class(data)
colnames(data) <- c("motorcycles", "cars")
data_source <- DataframeSource(data)
data_corpus <- VCorpus(data_soure)
data_corpus <- VCorpus(data_source)
data_corpus
data_corpus[[15]]
data_corpus[[15]][1]
data_corpus[[155]][1]
data_corpus[[155]][2]
data_corpus[[155]][3]
data_corpus[[155]][4]
data_corpus[155]
data_corpus[[155]]
str(data_corpus)
data[1:10]
data[1:10,]
?DataframeSource
?VCorpus
data_corpus <- as.VCorpus(data)
str(data_source)
str(data)
data <- data.frame(as.character(df$product), as.character(df2$product[1:3355]))
str(data)
data[,1] <- as.character(data[,1])
data[,2] <- as.character(data[,2])
colnames(data) <- c("motorcycles", "cars")
str(data)
data_source <- DataframeSource(data)
data_corpus <- VCorpus(data)
data_corpus <- VCorpus(data_source)
Vcorpus[[15]][1]
data_corpus[[15]][1]
str(data_corpus)
stopwords("en")
plot(freq_terms(text1))
plot(freq_terms(text2))
?tm_map
data_corpus <- tm_map(data_corpus,removeWords, stopwords("en"))
data_dtm <- DocumentTermMatrix(data_corpus)
data_dtm
data_m <- as.Matrix(data_dtm)
data_m <- as.matrix(data_dtm)
data_m
dim(data_m)
data_m[1:5,1:5]
data_m[1:5,3760:3771]
data_s <- removeSparseTerms(data_dtm, 0.98)
data_s
dim
data_m <- as.matrix(data_s)
dim(data_m)
dim(data_m)
data_m[1:5,20:25]
data_m[1:5,1:5]
data_m[1:5,60:68]
df_source <- VectorSource(df$product)
df_corpus <- VCorpus(df_source)
df_corpus <- tm_map(df_corpus,removeWords, stopwords("en"))
df_dtm <- DocumentTermMatrix(df_corpus)
df_dtm
df_m <- as.matrix(df_dtm)
dim(df_m)
df_m[1:5,400:420]
df_m[1:5,400:405]
df_s <- removeSparseTerms(data_dtm, 0.98)
df_s <- removeSparseTerms(df_dtm, 0.98)
df_s
df_m <- as.matrix(df_s)
dim(data_m)
dim(df_m)
data_m[1:5,20:25]
df_m[1:5,20:25]
df2_source <- VectorSource(df2$product)
df2_corpus <- VCorpus(df2_source)
df2_corpus <- tm_map(df2_corpus,removeWords, stopwords("en"))
df2_dtm <- DocumentTermMatrix(df2_corpus)
df2_dtm
df2_m <- as.matrix(df2_dtm)
dim(df2_m)
df2_m[1:5,400:405]
df2_s <- removeSparseTerms(df2_dtm, 0.98)
df2_s
df2_m <- as.matrix(df2_s)
dim(df2_m)
df2_m[1:5,20:25]
dim(df)
df_test <- df[3001:3355,]
dftest <- df[3001:3355,]
dftrain <-
df_source <- VectorSource(df$product)
dftrain <- df[1:3000,]
dfte <- df[3001:3355,]
dftr <- df[1:3000,]
dftr_source <- VectorSource(dftr$product)
dftr_corpus <- VCorpus(dftr_source)
dftr_corpus <- tm_map(dftr_corpus,removeWords, stopwords("en"))
dftr_dtm <- DocumentTermMatrix(dftr_corpus)
dftr_dtm
dftr_m <- as.matrix(dftr_dtm)
dim(dftr_m)
dftr_m[1:5,400:405]
dftr_s <- removeSparseTerms(df_dtm, 0.98)
dftr_s
dftr_m <- as.matrix(dftr_s)
dim(df_m)
dftr_m[1:5,20:25]
?knn
library(class)
?knn
df_source <- VectorSource(df$product)
df_corpus <- VCorpus(df_source)
df_corpus <- tm_map(df_corpus,removeWords, stopwords("en"))
df_dtm <- DocumentTermMatrix(df_corpus)
df_dtm
df_m <- as.matrix(df_dtm)
dim(dftr_m)
df_m[1:5,400:405]
df_s <- removeSparseTerms(df_dtm, 0.98)
dim(df_m)
df_s <- removeSparseTerms(df_dtm, 0.98)
df_s
df_m <- as.matrix(df_s)
dim(df_m)
df_m[1:5,20:25]
dim(df_m)
df_m.train <- df_m[1:3000,]
df_m.train <- df_m[1:2500,]
df_m.train <- df_m[1:3000,]
dim(df_m)
df_m.test <- df_m[3001:3355]
wss <- numeric(15)
wss
wss <- numeric(15)
for (i in 2:15) {wss[i] <- sum(kmeans(df_m.train, centers=i)$withinss)}
wss
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
plot(1:15, wss, type="l", xlab="Number of Clusters", ylab="Within groups sum of squares")
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
plot(1:15, wss, type="b", col = 'r', xlab="Number of Clusters", ylab="Within groups sum of squares")
plot(1:15, wss, type="b", col = 'red', xlab="Number of Clusters", ylab="Within groups sum of squares")
?kmeans
k.fit <- kmeans(df_m.train,centers = 7)
names(k.fit)
summary(k.fit)
k.fit$centers
names(k.fit)
k.fit$cluster
names(k.fit)
wss <- numeric(30)
for (i in 2:30) {wss[i] <- sum(kmeans(df_m.train, centers=i)$withinss)}
plot(1:30, wss, type="b", col = 'red', xlab="Number of Clusters", ylab="Within groups sum of squares")
wss <- numeric(40)
for (i in 2:40) {wss[i] <- sum(kmeans(df_m.train, centers=i)$withinss)}
plot(1:40, wss, type="l", col = 'red', xlab="Number of Clusters", ylab="Within groups sum of squares")
plot(1:40, wss, type="b", col = 'red', xlab="Number of Clusters", ylab="Within groups sum of squares")
k.fit <- kmeans(df_m.train,centers = 25)
names(k.fit)
k.fit$centers
k.fit$cluster[1:5]
df_m.train <- data.frame(df_m.train,k.fit$cluster)
dim(df_m.train)
colnames(df_m.train)
colnames(df_m.train)[32] <- "label"
library(e1071)
svm.fit <- svm(df_m.train$label ~ ., data = df_m.train)
df_m.test <- dataframe(df_m.test, numeric(355))
df_m.test <- data.frame(df_m.test, numeric(355))
df_m.test <- df_m[3001:3355]
df_m.test <- data.frame(df_m.test, rep(0, 355))
preds <- predict(svm.fit, newdata = df_m.test)
preds
names(svm.fit)
preds <- predict(svm.fit, newdata = df_m.test)
colnames(df_m.train)
colnames(df_m.test)
class(df_m.test)
df_m.test
dim(df_m)
df_m.test <- df_m[3001:3355]
?rep
rep(0,5)
df_m.test <- data.frame(df_m.test, rep(0, 355))
dim(df_m.test)
df_m.test <- df_m[3001:3355]
dim(df_m.test)
df_m.test <- df_m[3001:3355,]
df_m.test <- data.frame(df_m.test, rep(0, 355))
dim(df_m.test)
colnames(df_m.test)
colnames(df_m.test)[32] <- "label"
preds <- predict(svm.fit, newdata = df_m.test)
dim(preds)
(preds)[1:5]
str(df_m.train)
df_m.train$label <- as.factor(df_m.train$label)
svm.fit <- svm(df_m.train$label ~ ., data = df_m.train)
df_m.test <- data.frame(df_m.test, rep(0, 355))
colnames(df_m.test)[32] <- "label"
preds <- predict(svm.fit, newdata = df_m.test)
(preds)[1:5]
df_m[3003,]
example <- df_m[3003,]
example [example > 1]
example <- df_m[3003,]
example [example = 1]
df_m.train[label = 15]
df_m.train['label' = 15,]
df_m.train[label = 15,]
df_m.train[label == 15,]
df_m.train[df_m.train$label == 15,]
plot(df_m.train[df_m.train$label == 15,])
plot(df_m.train[df_m.train$label == 15,])
plot(df_m.train[df_m.train$label == 15,])[15]
(df_m.train[df_m.train$label == 15,])[1:5]
(df_m.train[df_m.train$label == 15,])[1:5,]
colMeans(df_m.train[df_m.train$label == 15,])
df_m.train[df_m.train$label == 15,]
3000/25
setwd("~/Projects/PakElections")
Results <- read.csv("Results2013_province.csv", stringsAsFactors = F, header = T)
library(dplyr)
library(ggplot2)
Win <- group_by(Results,Seat) %>% slice(1)
Run <- group_by(Results,Seat) %>% slice(2)
Win <- as.data.frame(Win)
Run <- as.data.frame(Run)
Diff <- cbind(Win[,-c(1,6)], Run$Party, Run$Votes)
Diff <- Diff[,c(3,4,5,1,2,6,7)]
colnames(Diff)[4:7] <- c("WinParty","WinVotes","RunParty","RunVotes")
Diff <- cbind(Diff, Df = Diff$WinVotes - Diff$RunVotes, Margin = ((Diff$WinVotes - Diff$RunVotes)/Diff$RunVotes))
Diff <- cbind(Diff, Percent = Diff$Margin * 100)
PMLNWins <- Diff[Diff$WinParty == "PML-N",]
PMLNRuns <- Diff[Diff$RunParty == "PML-N",]
WinPercent <- cut(PMLNWins$Percent, breaks = c(0,25,50,75,100,Inf), include.lowest = T, labels = c("<25%","<50%","<75%","<100%",">100%"))
RunPercent <- cut(PMLNRuns$Percent, breaks = c(0,25,50,75,100,Inf), include.lowest = T, labels = c("<25%","<50%","<75%","<100%",">100%"))
PMLNWins <- cbind(PMLNWins, WinPercent)
PMLNRuns <- cbind(PMLNRuns, RunPercent)
write.csv(PMLNWins, "PMLNWins.csv",row.names = F)
write.csv(PMLNRuns, "PMLNRuns.csv",row.names = F)
